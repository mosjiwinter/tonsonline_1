'use client';

import { notFound } from 'next/navigation';
import { useEffect, useState } from 'react';
import liff from '@line/liff';
import QRCode from 'qrcode';

export default function StaffPage() {
  const [profile, setProfile] = useState<any>(null);
  const [qrImage, setQrImage] = useState<string | null>(null);

  useEffect(() => {
    const init = async () => {
      try {
        await liff.init({ liffId: '2007552712-Ml60zkVe' });
        if (!liff.isLoggedIn()) {
          liff.login();
          return;
        }

        const p = await liff.getProfile();
        // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô staff ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≤‡∏Å userId)
        if (!isStaff(p.userId)) {
          notFound(); // ‡∏à‡∏∞ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ 404
          return;
        }

        setProfile(p);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
        const registerUrl = `https://liff.line.me/2007552712-Ml60zkVe/register?ref=${p.userId}`;
        const qr = await QRCode.toDataURL(registerUrl);
        setQrImage(qr);
      } catch (err) {
        console.error('Error:', err);
        notFound();
      }
    };
    init();
  }, []);

  return (
    <div style={{ padding: '20px', fontFamily: 'sans-serif' }}>
      <h2 style={{ fontSize: '20px', marginBottom: '10px' }}>‡∏´‡∏ô‡πâ‡∏≤‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h2>
      {profile && (
        <>
          <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {profile.displayName}</p>
          <p><strong>LINE ID:</strong> {profile.userId}</p>
          <p style={{ marginTop: '16px' }}>üì≤ ‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡πÅ‡∏Å‡∏ô QR ‡∏ô‡∏µ‡πâ:</p>
          {qrImage && <img src={qrImage} alt="qr" style={{ width: '200px', marginTop: '10px' }} />}
        </>
      )}
    </div>
  );
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô staff
function isStaff(userId: string) {
  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≤‡∏Å userId ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
  const allowedStaffIds = [
    'U1234567890abcdef', // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ userId ‡∏Ç‡∏≠‡∏á staff ‡∏à‡∏£‡∏¥‡∏á‡πÜ
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° userId ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
  ];
  return allowedStaffIds.includes(userId);
}
